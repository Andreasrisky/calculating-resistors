<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>